// import React, { useState,useContext } from "react";
// import classes from "./SignUp.module.css";
// import { Link, useNavigate } from "react-router-dom";
// import { ClipLoader } from "react-spinners";
// import { auth, Auth } from "../../Utility/firebase";
// import {signInWithEmailAndPassword, createUserWithEmailAndPassword} from "firebase/auth"
// import { DataContext } from "../../Components/DataProvider/DataProvider";




// function Auth() {


// const [email, setEmail]= useState("");
// const [password, setPassword]= useState("");
// const [error, setError]= useState("");
// const [loading, setLoading]=useState({   signIn:false, signUp:false})

// const [{user}, dispatch]= useContext(DataContext)
// const navigate = useNavigate()




// // console.log(user);



// const authHandler= async(e)=>{
//   e.preventDefault();
//   console.log(e.target.name);

//   if(e.target.name=="signin"){
//     //firebase Auth
//     setLoading({...loading, signIn:true})
//   signInWithEmailAndPassword(auth, email,password)
//   .then((userInfo)=>{
//     //  console.log(userInfo);

//      //dispatch
//       dispatch({
//         type:Type.SET_USER,
//         user:userInfo.user
//       });
//       setLoading({...loading, signIn:false});
//       navigate("/")
//      })

//   .catch((err)=>{
//     // console.log(err)
//     setError(err.message);
//     setLoading({...loading, signIn:false})
//   })
//   }else{
//       //  loading process
//       setLoading({...loading, signUp:true})
//     createUserWithEmailAndPassword(auth, email,password)
//     .then((userInfo)=>{
//       //console.log(userInfo)
     
         
//      //dispatch
//       dispatch({
//         type:Type.SET_USER,
//         user:userInfo.user
//       });
//       setLoading({...loading, signUp:false})
//       navigate("/")

 
//    }).catch((err)=>{
//     //  console.log(err)
//     setError(err.message);
//     setLoading({...loading, signIn:false})
//    })

//   }

// }






// // console.log(password, email)

// return (
//    <section  className={classes.login}>
//     {/* logo */}
//       <Link to={"/"} >
//            <img src="https://upload.wikimedia.org/wikipedia/commons/a/a9/Amazon_logo.svg"
//             alt="" />
//       </Link>


//     {/* form */}
//          <div className={classes.login_container}>
//           <h1>Sign In</h1>
//           <form action="">

//             <div>
//               <label htmlFor="email">Email</label>
//                <input value={email}   onChange={(e)=>setEmail(e.target.value)} type="email" id="email" />
//             </div>


//              <div>
//                <label htmlFor="password">Password</label>
//                <input  value={password} onChange={(e)=>setPassword(e.target.value)} type="password" id="Password" />
//              </div>
//              {/* sign in  button start*/}
//              <button type="submit"
//               onClick={authHandler} 
//               name="signin"
//                className={classes.login_signInButton}>
                
//                 {/* cliploader */}
//                 {loading.signIn?(
//                   <ClipLoader color="#000" size={15}></ClipLoader>
//                 ):("Sign In")}
                
//                 </button>
//                  {/* sign in button  End*/}
//           </form>

//          {/* agreement */}

//        <p>
//         By signing-in you agree to the AMAZONE FAKE CLONE Conditions of Use & Sale.Please see our Privacy Note,
//         our cookies Notice and our interst-Based Ads Notice.
//        </p>
//        {/* create amazon account button */}
//        <button type="submit"
//         onClick={authHandler}  
//         name="signup"  
//         className={classes.login_registerButton}>
          
//           {/* cliploader */}
//           {loading.signUp?(
//                   <ClipLoader color="#000" size={15}></ClipLoader>
//                 ):("Create your Amazon Account")}
          
//            </button>

//          {
//          error && <small style={{paddingTop:"5px", color:"red"}}>{error}</small>

//          }



//          </div>
//    </section>
// )}
// export default Auth;
